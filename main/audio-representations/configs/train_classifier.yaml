# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - _self_
  - data: audioset_classification  # New data config for classification
  - model: jepa_classifier         # New model config for classifier
  - callbacks: default
  - logger: tensorboard
  - trainer: default
  - paths: default
  - extras: default
  - hydra: default
  - dora: default
  - slurm: gaia

  - cluster: null

  # experiment configs allow for version control of specific hyperparameters
  # e.g. best hyperparameters for given model and datamodule
  - experiment: null

  # config for hyperparameter optimization
  - hparams_search: null

  # optional local config for machine/user specific settings
  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default

  # debugging config (enable through command line, e.g. `python train.py debug=default)
  - debug: null

# task name, determines output directory path (unique to avoid overwriting)
task_name: "jepa_classifier"

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: ["jepa", "classification", "eeg", "user_id"]

# set False to skip model training
train: true

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
test: true

# simply provide checkpoint path to resume training
ckpt_path: null

# seed for random number generators in pytorch, numpy and python.random
seed: 42

# metric to optimize for hyperparameter search
optimized_metric: "val/acc"

logger:
  class_path: lightning.pytorch.loggers.TensorBoardLogger
  init_args:
    save_dir: logs
    name: jepa_classifier  # Different from your original to prevent overwriting